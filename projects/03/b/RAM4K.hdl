// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in = load, sel = address[9..11], a = RAMLoad1, b = RAMLoad2, c = RAMLoad3, d = RAMLoad4, e = RAMLoad5, f = RAMLoad6, g = RAMLoad7, h = RAMLoad8);


    RAM512(in = in, load = RAMLoad1, address = address[0..8], out = RAM1);
    RAM512(in = in, load = RAMLoad2, address = address[0..8], out = RAM2);
    RAM512(in = in, load = RAMLoad3, address = address[0..8], out = RAM3);
    RAM512(in = in, load = RAMLoad4, address = address[0..8], out = RAM4);
    RAM512(in = in, load = RAMLoad5, address = address[0..8], out = RAM5);
    RAM512(in = in, load = RAMLoad6, address = address[0..8], out = RAM6);
    RAM512(in = in, load = RAMLoad7, address = address[0..8], out = RAM7);
    RAM512(in = in, load = RAMLoad8, address = address[0..8], out = RAM8);


    Mux8Way16(a = RAM1, b = RAM2, c = RAM3, d = RAM4, e = RAM5, f = RAM6, g = RAM7, h = RAM8, sel = address[9..11], out = out);
}